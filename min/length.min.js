/*!
 * length.js v0.0.8 (https://github.com/appalaszynski/length.js)
 * Copyright (c) 2018 appalaszynski (https://github.com/appalaszynski)
 * Licensed under MIT (https://github.com/appalaszynski/length.js/blob/master/LICENSE)
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():t.length=e()}(this,function(){"use strict";var i={pm:Math.pow(10,-12),nm:Math.pow(10,-7),um:Math.pow(10,-4),mm:.1,cm:1,dm:10,m:Math.pow(10,2),km:Math.pow(10,5),in:2.54,ft:30.48,yd:91.44,mi:160934.4,au:0xd9b18cb4eac,ly:94607304725808e4},n=Object.keys(i);function r(t,e){if(void 0===t||void 0===e)throw Error("You have to pass value and unit type!");if("number"!=typeof t)throw Error("Value must be a number!");if(-1==n.indexOf(e))throw Error("Unsupported unit type! Supported types:\n"+n+".")}function u(t,e){r(t,e),this.value=t,this.unit=e}var o=function(t,e){return new u(t,e)};function t(){return this.value+this.unit}var e=u.prototype={};return e.version="0.0.8",e.to=function(t){!function(t){if(void 0===t)throw Error("You have to pass unit type!");if(-1==n.indexOf(t))throw Error("Unsupported unit type! Supported types:\n"+n+".")}(t);var e=function(t,e){if(void 0!==i[e])return t*(1/i[e])}(function(t,e){if(void 0!==i[e])return t*i[e]}(this.value,this.unit),t);return o(e,t)},e.add=function(t,e){var i;if(void 0===e)!function(t){if(void 0===t)throw Error("You have to pass value!");if("number"!=typeof t)throw Error("Value must be a number!")}(t),i=this.value+t;else{if(r(t,e),0===t)return o(this.value,this.unit);i=this.value+o(t,e).to(this.unit).getValue()}return o(i,this.unit)},e.getValue=function(){return this.value},e.getUnit=function(){return this.unit},e.getString=t,e.toString=t,e.toPrecision=function(t){var e=t?this.value.toFixed(t):this.value;return o(parseFloat(e),this.unit)},o.fn=e,o});